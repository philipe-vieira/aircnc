{"ast":null,"code":"import _slicedToArray from \"/home/philipe/ProjectsNodeJS/aircnc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/philipe/ProjectsNodeJS/aircnc/frontend/src/pages/dashboard/index.js\";\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport socketio from 'socket.io-client';\nimport api from '../../services/api';\nimport './styles.css';\nexport default function Dashboard() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        spots = _useState2[0],\n        setSpots = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        requests = _useState4[0],\n        setRequests = _useState4[1];\n\n  const user_id = localStorage.getItem('user');\n  const socket = useMemo(() => socketio('http://localhost:3333', {\n    query: {\n      user_id\n    }\n  }), [user_id]);\n  useEffect(() => {\n    socket.on('booking_request', data => {\n      setRequests([...requests, data]);\n    });\n  }, [requests, socket]);\n  useEffect(() => {\n    async function loadSpots() {\n      const user_id = localStorage.getItem('user');\n      const response = await api.get('/dashboard', {\n        headers: {\n          user_id\n        }\n      });\n      setSpots(response.data);\n    }\n\n    loadSpots();\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n    className: \"notifications\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, requests.map(request => React.createElement(\"li\", {\n    key: request._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, request.user.email, \" \"), \"                            est\\xE1 solicitando uma reserva em\", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, request.spot.company, \" \"), \"para a data\", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, request.date, \" \")), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"ACEITAR\"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"REJEITAR\")))), React.createElement(\"ul\", {\n    className: \"spot-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, spots.map(spot => React.createElement(\"li\", {\n    key: spot._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    style: {\n      backgroundImage: \"url(\".concat(spot.thumbnail_url, \")\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, spot.company), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, spot.price ? \"R$ \".concat(spot.price, \"/dia\") : 'GRATUITO')))), React.createElement(Link, {\n    to: \"/new\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Cadastrar novo Spot\")));\n}","map":{"version":3,"sources":["/home/philipe/ProjectsNodeJS/aircnc/frontend/src/pages/dashboard/index.js"],"names":["React","useEffect","useState","useMemo","Link","socketio","api","Dashboard","spots","setSpots","requests","setRequests","user_id","localStorage","getItem","socket","query","on","data","loadSpots","response","get","headers","map","request","_id","user","email","spot","company","date","backgroundImage","thumbnail_url","price"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport socketio from 'socket.io-client';\nimport api from '../../services/api';\n\nimport './styles.css';\n\nexport default function Dashboard(){\n    const [ spots, setSpots] = useState([]);\n    const [ requests, setRequests] = useState([]);\n\n    const user_id = localStorage.getItem('user');\n    const socket = useMemo( () => socketio('http://localhost:3333', { query: { user_id } } ), [user_id]);\n\n\n    useEffect(() => {\n        socket.on('booking_request', data => {\n            setRequests([ ... requests, data ]);\n        });\n    }, [requests, socket]);\n\n    useEffect(()=> {\n        async function loadSpots(){\n            const user_id = localStorage.getItem('user');\n            const response = await api.get('/dashboard', {\n                headers: { user_id }\n            });\n            setSpots(response.data);\n        }\n\n        loadSpots();\n    }, []);\n\n    return (\n        <>\n            <ul className=\"notifications\">\n                {requests.map( request => (\n                    <li key={request._id}>\n                        <p><strong>{request.user.email} </strong>                            est√° solicitando uma reserva em \n                            <strong>{request.spot.company} </strong>\n                            para a data  \n                            <strong>{request.date} </strong>\n                        </p>\n                        <button>ACEITAR</button>\n                        <button>REJEITAR</button>\n                    </li>\n                ))}\n            </ul>\n            <ul className=\"spot-list\">\n                { spots.map( spot => (\n                    <li key={spot._id}>\n                        <header style={{backgroundImage: `url(${spot.thumbnail_url})` }} />\n                        <strong>{ spot.company }</strong>\n                        <span>{ spot.price ? `R$ ${spot.price}/dia` : 'GRATUITO' }</span>\n                    </li>\n                ))}\n            </ul>\n\n            <Link to=\"/new\">\n                <button className=\"btn\">Cadastrar novo Spot</button>\n            </Link>\n        </>\n        \n    )\n}"]},"metadata":{},"sourceType":"module"}