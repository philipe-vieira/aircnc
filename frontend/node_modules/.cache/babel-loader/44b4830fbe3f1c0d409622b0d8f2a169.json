{"ast":null,"code":"import _slicedToArray from \"/home/philipe/ProjectsNodeJS/aircnc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/philipe/ProjectsNodeJS/aircnc/frontend/src/pages/new/index.js\";\nimport React, { useState, useMemo } from 'react';\nimport api from '../../services/api.js';\nimport camera from \"../../assets/camera.svg\";\nimport './styles.css';\nimport { helpers } from 'handlebars';\nexport default function New({\n  history\n}) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        company = _useState2[0],\n        setCompany = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        techs = _useState4[0],\n        setTechs = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        price = _useState6[0],\n        setPrice = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        thumbnail = _useState8[0],\n        setThumbnail = _useState8[1];\n\n  const preview = useMemo(() => {\n    return thumbnail ? URL.createObjectURL(thumbnail) : null;\n  }, [thumbnail]);\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const data = new FormData();\n    const user_id = localStorage.getItem('user');\n    data.append('thumbnail', thumbnail);\n    data.append('company', company);\n    data.append('techs', techs);\n    data.append('price', price);\n    await api.post('/spots', data, {\n      headers: {\n        user_id\n      }\n    });\n    history.push('/dashboard');\n  }\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    id: \"thumbnail\",\n    style: {\n      backgroundImage: \"url(\".concat(preview, \")\")\n    },\n    className: thumbnail ? 'has-thumbnail' : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    onChange: event => setThumbnail(event.target.files[0]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: camera,\n    alt: \"Select Image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: \"company\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"EMPRESA *\"), React.createElement(\"input\", {\n    id: \"company\",\n    type: \"text\",\n    placeholder: \"sua empresa incrivel\",\n    value: company,\n    onChange: event => setCompany(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"Tecs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"TECNOLOGIAS *  \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"(separadas por v\\xEDrgula)\")), React.createElement(\"input\", {\n    id: \"techs\",\n    type: \"text\",\n    value: techs,\n    onChange: event => setTechs(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"Price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Valor da di\\xE1ria \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"(em branco para GRATUITO)\")), React.createElement(\"input\", {\n    id: \"price\",\n    type: \"text\",\n    placeholder: \"Qual o valor da diaria? \",\n    value: price,\n    onChange: event => setPrice(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Cadastrar\"));\n}","map":{"version":3,"sources":["/home/philipe/ProjectsNodeJS/aircnc/frontend/src/pages/new/index.js"],"names":["React","useState","useMemo","api","helpers","New","history","company","setCompany","techs","setTechs","price","setPrice","thumbnail","setThumbnail","preview","URL","createObjectURL","handleSubmit","event","preventDefault","data","FormData","user_id","localStorage","getItem","append","post","headers","push","backgroundImage","target","files","camera","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;AACA,OAAOC,GAAP,MAAgB,uBAAhB;;AAGA,OAAO,cAAP;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,eAAe,SAASC,GAAT,CAAc;AAACC,EAAAA;AAAD,CAAd,EAAyB;AAAA,oBACFL,QAAQ,CAAC,EAAD,CADN;AAAA;AAAA,QAC5BM,OAD4B;AAAA,QACnBC,UADmB;;AAAA,qBAERP,QAAQ,CAAC,EAAD,CAFA;AAAA;AAAA,QAE5BQ,KAF4B;AAAA,QAErBC,QAFqB;;AAAA,qBAGRT,QAAQ,CAAC,EAAD,CAHA;AAAA;AAAA,QAG5BU,KAH4B;AAAA,QAGrBC,QAHqB;;AAAA,qBAIDX,QAAQ,CAAC,IAAD,CAJP;AAAA;AAAA,QAI5BY,SAJ4B;AAAA,QAIlBC,YAJkB;;AAMpC,QAAMC,OAAO,GAAGb,OAAO,CAAE,MAAM;AAC3B,WAAOW,SAAS,GAAGG,GAAG,CAACC,eAAJ,CAAoBJ,SAApB,CAAH,GAAoC,IAApD;AACH,GAFsB,EAEpB,CAACA,SAAD,CAFoB,CAAvB;;AAIA,iBAAeK,YAAf,CAA6BC,KAA7B,EAAmC;AAC/BA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACA,UAAMC,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAhB;AAEAJ,IAAAA,IAAI,CAACK,MAAL,CAAY,WAAZ,EAAyBb,SAAzB;AACAQ,IAAAA,IAAI,CAACK,MAAL,CAAY,SAAZ,EAAuBnB,OAAvB;AACAc,IAAAA,IAAI,CAACK,MAAL,CAAY,OAAZ,EAAqBjB,KAArB;AACAY,IAAAA,IAAI,CAACK,MAAL,CAAY,OAAZ,EAAqBf,KAArB;AAEA,UAAMR,GAAG,CAACwB,IAAJ,CAAS,QAAT,EAAmBN,IAAnB,EAAyB;AAAKO,MAAAA,OAAO,EAAE;AAAEL,QAAAA;AAAF;AAAd,KAAzB,CAAN;AACAjB,IAAAA,OAAO,CAACuB,IAAR,CAAa,YAAb;AACH;;AAED,SACI;AAAM,IAAA,QAAQ,EAAGX,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,EAAE,EAAC,WADP;AAEI,IAAA,KAAK,EAAE;AAAEY,MAAAA,eAAe,gBAASf,OAAT;AAAjB,KAFX;AAGI,IAAA,SAAS,EAAEF,SAAS,GAAG,eAAH,GAAoB,EAH5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEM,KAAK,IAAIL,YAAY,CAACK,KAAK,CAACY,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI;AAAK,IAAA,GAAG,EAAEC,MAAV;AAAkB,IAAA,GAAG,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ,EAUI;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVJ,EAWI;AACI,IAAA,EAAE,EAAC,SADP;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,sBAHhB;AAII,IAAA,KAAK,EAAE1B,OAJX;AAKI,IAAA,QAAQ,EAAEY,KAAK,IAAIX,UAAU,CAACW,KAAK,CAACY,MAAN,CAAaG,KAAd,CALjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,EAmBI;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAArC,CAnBJ,EAoBI;AACI,IAAA,EAAE,EAAC,OADP;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,KAAK,EAAEzB,KAHX;AAII,IAAA,QAAQ,EAAEU,KAAK,IAAIT,QAAQ,CAACS,KAAK,CAACY,MAAN,CAAaG,KAAd,CAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBJ,EA2BI;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAvC,CA3BJ,EA4BI;AACI,IAAA,EAAE,EAAC,OADP;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,0BAHhB;AAII,IAAA,KAAK,EAAEvB,KAJX;AAKI,IAAA,QAAQ,EAAEQ,KAAK,IAAIP,QAAQ,CAACO,KAAK,CAACY,MAAN,CAAaG,KAAd,CAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BJ,EAoCI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBApCJ,CADJ;AAwCH","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport api from '../../services/api.js'\n\nimport camera from '../../assets/camera.svg';\nimport './styles.css';\nimport { helpers } from 'handlebars';\n\nexport default function New( {history} ){\n    const [ company, setCompany,  ] = useState('');\n    const [ techs, setTechs ] = useState('');\n    const [ price, setPrice ] = useState('');\n    const [ thumbnail,setThumbnail ] = useState(null);\n\n    const preview = useMemo( () => {\n        return thumbnail ? URL.createObjectURL(thumbnail) : null;\n    }, [thumbnail] );\n\n    async function handleSubmit (event){\n        event.preventDefault();\n\n        const data = new FormData();\n        const user_id = localStorage.getItem('user');\n\n        data.append('thumbnail', thumbnail);\n        data.append('company', company);\n        data.append('techs', techs);\n        data.append('price', price);\n\n        await api.post('/spots', data, {    headers: { user_id }    } );\n        history.push('/dashboard');\n    }\n    \n    return(\n        <form onSubmit={ handleSubmit }>\n            <label \n                id=\"thumbnail\" \n                style={{ backgroundImage: `url(${preview})` }}\n                className={thumbnail ? 'has-thumbnail': ''}\n                >\n                <input type=\"file\" onChange={event => setThumbnail(event.target.files[0]) }/>\n                <img src={camera} alt=\"Select Image\"/>\n            </label>\n\n            <label htmlFor=\"company\">EMPRESA *</label>\n            <input \n                id=\"company\"\n                type=\"text\"\n                placeholder=\"sua empresa incrivel\"\n                value={company}\n                onChange={event => setCompany(event.target.value)}\n            />\n\n            <label htmlFor=\"Tecs\">TECNOLOGIAS *  <span>(separadas por vírgula)</span></label>\n            <input \n                id=\"techs\"\n                type=\"text\"\n                value={techs}\n                onChange={event => setTechs(event.target.value)}\n            />\n\n            <label htmlFor=\"Price\">Valor da diária <span>(em branco para GRATUITO)</span></label>\n            <input \n                id=\"price\"\n                type=\"text\"\n                placeholder=\"Qual o valor da diaria? \"\n                value={price}\n                onChange={event => setPrice(event.target.value)}\n            />\n\n            <button type=\"submit\" className=\"btn\">Cadastrar</button>\n        </form>\n    );\n}"]},"metadata":{},"sourceType":"module"}